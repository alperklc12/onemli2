class Journal:
    def __init__(self):
        self.entries = []
        self.count = 0

    def add_entry(self, text):
        self.count += 1
        self.entries.append(f"{self.count}: {text}")

    def remove_entry(self, pos):
        del self.entries[pos]

    def __str__(self):
        return '\n'.join(self.entries)


class PersistenceManager:
    @staticmethod
    def save_to_file(journal: Journal, filname: str):
        fl = open(filname, 'w')
        fl.write(str(journal))
        fl.close()

    @staticmethod
    def load_to_file(filename: str):
        fl = open(filename)
        data = fl.read()
        fl.close()
        return data


jr = Journal()
jr.add_entry("I cried today.")
jr.add_entry("I ate bug.")

rusalt = PersistenceManager.load_to_file("data.txt")
print(rusalt)
