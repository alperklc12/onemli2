MENU_SEPERATE = "---------------"


class BinaryTreeNode:
    def __init__(self, data):
        self.data = data
        self.right = None
        self.left = None

    def __repr__(self):
        return f"<{self.data}>"

    def add_child(self, data):
        if data == self.data:
            return

        if data < self.data:
            if self.left:
                self.left.add_child(data)
            else:
                self.left = BinaryTreeNode(data)
                return
        else:
            if self.right:
                self.right.add_child(data)
            else:
                self.right = BinaryTreeNode(data)
                return

    def in_order_traversal(self):
        if self.left:
            self.left.in_order_traversal()
        print(self)
        if self.right:
            self.right.in_order_traversal()

    def search(self, val):
        if val == self.data:
            return True
        if val < self.data:
            if self.left:
                return self.left.search(val)
            else:
                return False
        if val > self.data:
            if self.right:
                return self.right.search(val)
            else:
                return False


def build_tree(elements):
    root = BinaryTreeNode(elements[0])

    for e in elements[1:]:
        root.add_child(e)

    return root


if __name__ == "__main__":
    lst = [17, 4, 1, 20, 9, 23, 18, 34]
    my_tree = build_tree(lst)
    rusalt = my_tree.search(34)
    print(rusalt)






